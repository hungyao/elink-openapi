openapi: 3.0.3
info:
  title: LinkJapan - eLife API
  description: |-
    This is a reverse engineering of the LinkJapan eLife API
    
    Some useful links:
    - [LinkJapan eLife](https://linkjapan.co.jp/elife/)
    - [HomeLink app](https://linkjapan.co.jp/appehome/)
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://elife-api.aiscloud.linkjapan.co.jp/api/elife
tags:
  - name: account
    description: An account represent you on the eLife API, and allow access to controlling your devices.
  - name: family
    description: A family represents a home, usually a physical building that groups a set of devices together.
  - name: room
  - name: device
    description: A device is an specific appliance, such as a light, air conditioner, heater, etc.
  - name: smartplug
    description: Control your smart plug such as the Iris Ohyama SMT-PL1
  - name: panel
    description: A panel groups controls for a set of devices together.
  - name: timer
    description: A timer implements automation for your devices to control them based on different conditions. 

paths:
  /account/login:
    post:
      tags:
        - account
      summary: Login to an existing account
      requestBody:
        description: Login to an existing account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'

  /account/features:
    get:
      tags:
        - account
      summary: Read account features
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountFeaturesResponse'
      security:
        - bearer_auth: []

  /account/me:
    get:
      tags:
        - account
      summary: Read account information
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfo'
      security:
        - bearer_auth: []
    put:
      tags:
        - account
      responses:
        '200':
          description: Successful action
  
  /account/change-email:
    post:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        '200':
          description: Successful action

  /account/change-password:
    post:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        '200':
          description: Successful action

  /account/delete-me:
    delete:
      tags:
        - account
      responses:
        '200':
          description: Successful action

  /account/register:
    post:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAccountRequest'
        required: true
      responses:
        '200':
          description: Successful action

  /account/reset-password:
    post:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      responses:
        '200':
          description: Successful action

  /account/send-code:
    post:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeRequest'
        required: true
      responses:
        '200':
          description: Successful action

  /family:
    get:
      tags:
        - family
      summary: List all families
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Family'
      security:
        - bearer_auth: []

    post:
      tags:
        - family
      summary: Create a family
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []
        
  /family/{familyId}:
    get:
      tags:
        - family
      summary: Find family by ID
      description: Returns a single family
      parameters:
        - name: familyId
          in: path
          description: ID of family to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
      security:
        - bearer_auth: []

    put:
      tags:
        - family
      summary: Update a family
      parameters:
        - name: familyId
          in: path
          description: ID of family to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

    delete:
      tags:
        - family
      summary: Delete a family
      parameters:
        - name: familyId
          in: path
          description: ID of family to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /room:
    get:
      tags:
        - room
      summary: List all rooms
      parameters:
        - name: familyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []
    post:
      tags:
        - room
      summary: Create a room
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /room/{roomId}:
    get:
      tags:
        - room
      summary: Find room by ID
      description: Returns a single room
      parameters:
        - name: roomId
          in: path
          description: ID of room to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []

    put:
      tags:
        - room
      summary: Update a room
      parameters:
        - name: roomId
          in: path
          description: ID of room to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

    delete:
      tags:
        - room
      summary: Delete a room
      parameters:
        - name: roomId
          in: path
          description: ID of room to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /device:
    get:
      tags:
        - device
      summary: List all devices
      parameters:
        - name: familyId
          in: query
          description: Family to get devices for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
      security:
        - bearer_auth: []
    post:
      tags:
        - device
      summary: Create a device
      requestBody:
        description: Create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        required: true
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /device/{deviceId}:
    get:
      tags:
        - device
      summary: Find device by ID
      description: Returns a single device
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      security:
        - bearer_auth: []
    put:
      tags:
        - device
      summary: Update a device
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []
    delete:
      tags:
        - device
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []
      

  /device/{deviceId}/online:
    get:
      tags:
        - device
      summary: Check whether a device is online
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to check
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: boolean
                example: true
      security:
        - bearer_auth: []

  /device/{deviceId}/control:
    post:
      tags:
        - device
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to control
          required: true
          schema:
            type: string
      requestBody:
        description: Control request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlDeviceRequest'
        required: true
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []
        
  /device/{deviceId}/data:
    get:
      tags:
        - device
      summary: Get the data of a device
      description: Returns the data for a single device
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to get data for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceData'
      security:
        - bearer_auth: []

  /device/{deviceId}/history:
    get:
      tags:
        - device
      summary: Get the history of a device
      description: Returns the history for a single device
      parameters:
        - name: deviceId
          in: path
          description: ID of the device to get data for
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: Lower bound of the history data to get
          required: true
          schema:
            type: string
            format: date-time
            example: "2022-01-01T00:00:00.000Z"
        - name: to
          in: query
          description: Upper bound of the history data to get
          required: true
          schema:
            type: string
            format: date-time
            example: "2022-06-01T00:00:00.000Z"
        - name: field
          in: query
          description: Field of the history data to get
          required: true
          schema:
            type: string
            enum: [buy, doorsensor_status, envtemp, envhumid, envlux, pir_detected, keypressed, tempsensor, humsensor, totalconsum, temp_value_, humidity_value_, co2_value_, va_temperature, va_humidity]
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: object
      security:
        - bearer_auth: []

  /broadlink/opencontrol:
    post:
      tags:
        - smartplug
      summary: Control a smart plug
      description: Turn the smart plug on or off
      requestBody:
        description: Control request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenControlRequest'
        required: true
      responses:
        '200':
          description: Successful control
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenControlResponse'
      security:
        - bearer_auth: []
          broadlink_license_auth: []
  
  /broadlink/firmware:
    post:
      tags:
        - smartplug
      summary: Get the firmware version of a smartplug
      requestBody:
        description: Control request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareRequest'
        required: true
      responses:
        '200':
          description: Successful read of firmware version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareResponse'
      security:
        - bearer_auth: []

  /broadlink/ircode/learncode:
    post:
      tags:
        - smartplug
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []


  /panel:
    get:
      tags:
        - panel
      summary: List panels
      parameters:
        - name: familyId
          in: query
          description: Family to filter timers
          schema:
            type: string
        - name: deviceId
          in: query
          description: Device to filter timers
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Panel'
      security:
        - bearer_auth: []
    post:
      tags:
        - panel
      summary: Create a panel
      requestBody:
        description: Create panel request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePanelRequest'
        required: true
      responses:
        '200':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Panel'
      security:
        - bearer_auth: []

  /panel/{panelId}:
    get:
      tags:
        - panel
      summary: Get a panel
      parameters:
        - name: panelId
          in: path
          description: ID of panel to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Panel'
      security:
        - bearer_auth: []
    put:
      tags:
        - panel
      summary: Update a panel
      parameters:
        - name: panelId
          in: path
          description: ID of panel to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update panel request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePanelRequest'
        required: true
      responses:
        '200':
          description: Successful update
      security:
        - bearer_auth: []
    delete:
      tags:
        - panel
      summary: Remove a panel
      parameters:
        - name: panelId
          in: path
          description: ID of panel to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful removal
      security:
        - bearer_auth: []

  /countdown:
    get:
      tags:
        - timer
      summary: List countdown timers
      parameters:
        - name: deviceId
          in: query
          description: Device to filter countdown timers
          schema:
            type: string
        - name: panelId
          in: query
          description: Panel to filter countdown timers
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Countdown'
      security:
        - bearer_auth: []
    
    post:
      tags:
        - timer
      summary: Create a countdown timer
      requestBody:
        description: Create countdown timer request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCountdownRequest'
        required: true
      responses:
        '200':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countdown'
      security:
        - bearer_auth: []

  /countdown/{countdownId}:
    get:
      tags:
        - timer
      summary: Get a countdown timer
      parameters:
        - name: countdownId
          in: path
          description: ID of countdown timer to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countdown'
      security:
        - bearer_auth: []

    put:
      tags:
        - timer
      summary: Update a countdown timer
      parameters:
        - name: countdownId
          in: path
          description: ID of countdown timer to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update countdown timer request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCountdownRequest'
        required: true
      responses:
        '200':
          description: Successful update
      security:
        - bearer_auth: []

    delete:
      tags:
        - timer
      summary: Remove a countdown timer
      parameters:
        - name: countdownId
          in: path
          description: ID of countdown timer to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful removal
      security:
        - bearer_auth: []

  /schedule:
    get:
      tags:
        - timer
      summary: List timers
      parameters:
        - name: tag
          in: query
          description: Tag to filter timers
          schema:
            type: string
            example: sekisui
        - name: familyId
          in: query
          description: Family to filter timers
          schema:
            type: string
        - name: deviceId
          in: query
          description: Device to filter timers
          schema:
            type: string
        - name: panelId
          in: query
          description: Panel to filter timers
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timer'
      security:
        - bearer_auth: []
    post:
      tags:
        - timer
      summary: Create a timer
      requestBody:
        description: Create timer request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimerRequest'
        required: true
      responses:
        '200':
          description: Successful creation of a timer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
      security:
        - bearer_auth: []
  
  /schedule/{timerId}:
    get:
      tags:
        - timer
      summary: Get a timer
      parameters:
        - name: timerId
          in: path
          description: ID of timer to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timer'
      security:
        - bearer_auth: []
    put:
      tags:
        - timer
      summary: Update a timer
      parameters:
        - name: timerId
          in: path
          description: ID of timer to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update timer request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimerRequest'
        required: true
      responses:
        '200':
          description: Successful update
      security:
        - bearer_auth: []

    delete:
      tags:
        - timer
      summary: Remove a timer
      parameters:
        - name: timerId
          in: path
          description: ID of timer to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful removal
      security:
        - bearer_auth: []

  /scene:
    get:
      parameters:
        - name: familyId
          in: query
          description: Family to get scenes for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scene'
      security:
        - bearer_auth: []

    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []
  
  /scene/{sceneId}:
    get:
      parameters:
        - name: sceneId
          in: path
          description: ID of scene to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scene'
      security:
        - bearer_auth: []

    put:
      parameters:
        - name: sceneId
          in: path
          description: ID of scene to update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

    delete:
      parameters:
        - name: sceneId
          in: path
          description: ID of family to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /linkage/trigger:
    get:
      parameters:
        - name: familyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []

    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /notification/clearBadge:
    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /notification/registerDeviceToken:
    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /notification/revokeDeviceToken:
    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /notification/message:
    get:
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []

  /notification/message/markRead:
    put:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /notification/broadcastMessage:
    get:
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []

  /notification/broadcastMessage/markRead:
    put:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /notification/trigger:
    get:
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []

    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []
        
  /log:
    post:
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []

  /operation-log:
    get:
      responses:
        '200':
          description: Successful retrieval
      security:
        - bearer_auth: []
  
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOperationRequest'
        required: true
      responses:
        '200':
          description: Successful action
      security:
        - bearer_auth: []
    

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        app:
          type: string
      example:
        email: "user@example.com"
        password: "mypassword"
        app: "HomeLink"
    AccountInfo:
      type: object
      properties:
        app:
          type: string
        company:
          type: string
        createdAt:
          type: string
          format: date-time
        email:
          type: string
          format: email
        id:
          type: string
        lastLoginAt:
          type: string
        name:
          type: string
        parentAccountId:
          type: string
        permissions:
          type: string
        token:
          type: string
        updatedAt:
          type: string
          format: date-time
        vendorAccounts:
          type: array
          items:
            type: object
      example:
        app: "HomeLink"
        company: null
        createdAt: "2022-08-01T00:00:00.000Z"
        email: "user@example.com"
        id: "000000000000000000000001"
        lastLoginAt: "2022-08-01T00:00:00.000Z"
        name: ""
        parentAccountId: null
        permissions: null
        token: "00000000000000000006"
        updatedAt: "2022-08-01T00:00:00.000Z"

    AccountFeaturesResponse:
      type: object
      properties:
        backgroundGPS:
          type: boolean
          example: false
    
    ChangeEmailRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        verificationCode:
          type: string
        
    ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
          format: password
        password:
          type: string
          format: password

    RegisterAccountRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        company:
          type: string
        password:
          type: string
          format: password
        verificationCode:
          type: string
        app:
          type: string

    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        verificationCode:
          type: string
        app:
          type: string

    SendCodeRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        type:
          type: string
          enum: [register, reset_password, change_email]

    Family:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        buildingId:
          type: string
        userId:
          type: string
        app:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      example:
        id: "000000000000000000000002"
        name: "My Family"
        buildingId: null
        userId: "000000000000000000000001"
        app: null
        createdAt: "2022-08-01T00:00:00.000Z"
        updatedAt: "2022-08-01T00:00:00.000Z"
    Device:
      type: object
      properties:
        accessoryOrders:
          type: string
        appearance:
          type: string
        createdAt:
          type: string
          format: date-time
        did:
          type: string
        familyId:
          type: string
        hidden:
          type: string
          example: null
        id:
          type: string
        linked:
          type: boolean
          example: false
        name:
          type: string
        order:
          type: string
          example: null
        parentId:
          type: string
          example: null
        pid:
          type: string
        roomId:
          type: string
        setting:
          type: string
          example: null
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        vendor:
          type: string
      example:
        accessoryOrders: null
        appearance: null
        createdAt: "2022-08-01T00:00:00.000Z"
        did: "00000000000000000000000000000004"
        familyId: "000000000000000000000002"
        hidden: null
        id: "000000000000000000000007"
        linked: false
        name: "My Device"
        order: null
        parentId: null
        pid: "00000000000000000000000000000005"
        roomId: "000000000000000000000003"
        setting: null
        updatedAt: "2022-08-01T00:00:00.000Z"
        userId: "000000000000000000000002"
        vendor: "broadlink"

    CreateDeviceRequest:
      type: object
      properties:
        parentId:
          type: string
          example: null
        name:
          type: string
        familyId:
          type: string
        roomId:
          type: string
        vendor:
          type: string
        pid:
          type: string
        did:
          type: string
        extraInfo:
          type: object
        
    ControlDeviceRequest:
      type: object
      properties:
        deviceId:
          type: string
        type:
          type: string
          example: ""
        operation:
          type: string
          example: "control"
        extraInfo:
          type: object

    DeviceData:
      type: object
      properties:
        Data:
          type: object
          properties:
            indicator:
              type: number
            last_updated:
              type: string
            maxworktime:
              type: number
            pwr:
              type: number
        Did:
          type: string
        Pid:
          type: string
      example:
        Data:
          indicator: 1
          last_updated: "2022-08-01T00:00:00.000Z"
          maxworktime: 0
          pwr: 0
        Did: "00000000000000000000000000000004"
        Pid: "00000000000000000000000000000005"
    OpenControlRequest:
      type: object
      properties:
        directive:
          type: object
          properties:
            header:
              type: object
              properties:
                namespace:
                  type: string
                  example: "DNA.KeyValueControl"
                name:
                  type: string
                  example: "KeyValueControl"
                interfaceVersion:
                  type: string
                  example: "2"
                messageId:
                  type: string
                  example: "1bd5d003-31b9-476f-ad03-71d471922820"
            endpoint:
              $ref: '#/components/schemas/Endpoint'
            payload:
              $ref: '#/components/schemas/TriggerPower'
    Endpoint:
      type: object
      properties:
        devicePairedInfo:
          type: object
          properties:
            did:
              type: string
              example: "00000000000000000000000000000004"
            pid:
              type: string
              example: "00000000000000000000000000000005"
            mac:
              type: string
              example: "00:00:00:00:00:00"
            cookie:
              type: string
              format: byte
              example: "base64encodedcookievalue"
        endpointId:
          type: string
          example: "00000000000000000000000000000004"
        cookie:
          type: object
          properties:
            did:
              type: string
              example: "00000000000000000000000000000004"
            pid:
              type: string
              example: "00000000000000000000000000000005"
            sdid:
              type: string
              example: ""
            spid:
              type: string
              example: ""
    TriggerPower:
      type: object
      properties:
        act:
          type: string
          example: 'set'
        params:
          type: array
          items:
            type: string
            example: 'pwr'
        vals:
          type: array
          items:
            type: array
            items:
              type: object
              properties:
                val:
                  type: number
                  enum: [0, 1]
                  description: >
                    New value of the smart plug
                    * `0` - Off
                    * `1` - On
                  example: 1
                idx:
                  type: number
                  example: 1
        
    OpenControlResponse:
      type: object
      properties:
        context:
          type: object
        event:
          type: object
          properties:
            header:
              type: object
            payload:
              type: object
            endpoint:
              type: object
              properties:
                endpointId:
                  type: string
                  example: "00000000000000000000000000000004"
            
    FirmwareRequest:
      type: object
      properties:
        directive:
          type: object
          properties:
            header:
              type: object
              properties:
                namespace:
                  type: string
                  example: "DNA.ManagerControl"
                name:
                  type: string
                  example: "QueryVersion"
                interfaceVersion:
                  type: string
                  example: "1"
                messageId:
                  type: string
                  example: "202008280001"
            endpoint:
              $ref: '#/components/schemas/Endpoint'
            payload:
              type: object
              properties:
                getServerVersion:
                  type: boolean
                  example: true
    FirmwareResponse:
      type: object
      properties:
        context:
          type: object
        event:
          type: object
          properties:
            payload:
              type: object
              properties:
                version:
                  type: string
                  
        endpoint:
          type: object
          properties:
            endpointId:
              type: string
        
    Panel:
      type: object
      properties:
        brandId:
          type: number
        codeSpecId:
          type: string
        createdAt:
          type: string
          format: date-time
        customCodes:
          type: object
          example: null
        deviceId:
          type: string
        familyId:
          type: string
        hidden:
          type: boolean
          example: null
        id:
          type: string
        linked:
          type: boolean
          example: false
        name:
          type: string
        order:
          type: number
          example: null
        roomId:
          type: string
        state:
          type: object
        type:
          type: string
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
    
    CreatePanelRequest:
      type: object
      properties:
        name:
          type: string
        familyId:
          type: string
        roomId:
          type: string
        deviceId:
          type: string
        type:
          type: string
        brandId:
          type: number
        codeSpecId:
          type: string
        customCodes:
          type: object
          example: null
      
    UpdatePanelRequest:
      type: object
      properties:
        hidden:
          type: boolean
        name:
          type: string
        roomId:
          type: string
        order:
          type: number
        
    CountdownOffAction:
      type: object
      properties:
        delay:
          type: number
          example: null
        deviceId:
          type: string
        extraInfo:
          type: object
          example: null
        irCode:
          type: object
          example: null
        irCodeKey:
          type: object
          example: null
        operation:
          type: string
          enum: [off, on]
        panelId:
          type: string
          example: null
        panelType:
          type: string
          example: null
        sceneId:
          type: string
          example: null
        type:
          type: string

    Countdown:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: string
        offAction:
          $ref: '#/components/schemas/CountdownOffAction'
        seconds:
          type: number
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        willTriggerAt:
          type: string
          format: date-time
    
    CreateCountdownRequest:
      type: object
      properties:
        offAction:
          $ref: '#/components/schemas/CountdownOffAction'
        seconds:
          type: number
          example: 3600
          
    UpdateCountdownRequest:
      type: object

    Timer:
      type: object

    CreateTimerRequest:
      type: object
      properties:
        cron:
          type: string
        nthWeekOfMonth:
          type: number
        timezone:
          type: string
        actions:
          type: array
          items:
            type: object
        enabled:
          type: boolean
        tag:
          type: string
          example: fridge
      
    UpdateTimerRequest:
      type: object
      properties:
        enabled:
          type: boolean
        timezone:
          type: string
          example: null
        cron:
          type: string
          example: null
        actions:
          type: object
          example: null
    
    Scene:
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
        createdAt:
          type: string
          format: date-time
        familyId:
          type: string          
        hidden:
          type: boolean
        id:
          type: string          
        name:
          type: string          
        order:
          type: number
          example: null
        type:
          type: number
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string          

    LogOperationRequest:
      type: object
      properties:
        deviceId:
          type: string
        panelId:
          type: string
        operationKey:
          type: string
          enum: [on, off, mode, switch, temp_add, temp_sub, wind_speed]
        note:
          type: string
        extraInfo:
          type: object
    

  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer

    broadlink_license_auth:
      type: apiKey
      in: query
      name: license
